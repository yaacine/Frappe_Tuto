# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    services:
      mariadb:
        image: mariadb:latest
        ports:
          - 3306:3306
        env:
          MYSQL_USER: user
          MYSQL_PASSWORD: frappe
          MYSQL_DATABASE: test
          MYSQL_ROOT_PASSWORD: frappe
        options: -v ${{ github.workspace }}/frappeConf/:/etc/mysql/conf.d/ --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3  --name mariadb
    # -v ${{ github.workspace }}/my.cnf:/etc/mysql/my.cnf
    # --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --character-set-client-handshake = FALSE
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    
    - name: Shutdown Ubuntu MySQL (SUDO)
      run: sudo service mysql stop # Shutdown the Default MySQL, "sudo" is necessary, please not remove it
    
    - name: Restart mariadb
      uses: docker://docker
      with:
        args: docker restart mariadb


    - name: Verify MariaDB connection
      env:
          PORT: ${{ job.services.mariadb.ports[3306] }}
      run: |
           while ! mysqladmin ping -h"127.0.0.1" -P"$PORT" --silent; do
             sleep 1
           done    
    
    # Runs a set of commands using the runners shell
    - name: Getting dependencies
      run: |
        alias python=python3
        alias pip=pip3
        sudo apt install git python-dev redis-server 
        sudo apt-get install -y python-wheel
        sudo apt-get install software-properties-common
        sudo apt-get install python3-dev
        sudo apt-get install python3-setuptools python3-pip
        sudo apt-get install virtualenv
        sudo apt-get install libmysqlclient-dev
        
      
    - name: getting other dependencies
      run: |
        sudo apt-get install redis-server
        sudo apt-get install curl
        curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
        sudo apt-get install -y nodejs
        sudo apt install yarn
        pip3 install wheel
        pip install wheel
        
        
 
    - name: initialize the frappe 
      env:
          PORT: ${{ job.services.mariadb.ports[3306] }}
      run: |
        pip3 install frappe-bench
        export PATH=$PATH:~/.local/bin
        bench --version
        bench init --frappe-branch version-12 --python /usr/bin/python3.6 frappe-bench
        cd frappe-bench

        bench set-mariadb-host mariadb
        ls -alt
        
        bench new-site example.com --mariadb-root-password frappe  --admin-password frappe --no-mariadb-socket
        bench get-app https://github.com/yaacine/Frappe_Tuto.git
        bench --site example.com install-app library_management
        
    
        
